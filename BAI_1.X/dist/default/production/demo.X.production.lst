

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Aug 18 09:43:02 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.20
    13                           ; Generated 12/02/2020 GMT
    14                           ; 
    15                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F887 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  008F                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  0105                     	;# 
   110  0107                     	;# 
   111  0108                     	;# 
   112  0109                     	;# 
   113  010C                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  0185                     	;# 
   119  0187                     	;# 
   120  0188                     	;# 
   121  0189                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0017                     	;# 
   150  0018                     	;# 
   151  0019                     	;# 
   152  001A                     	;# 
   153  001B                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001D                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  0081                     	;# 
   160  0085                     	;# 
   161  0086                     	;# 
   162  0087                     	;# 
   163  0088                     	;# 
   164  0089                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  008F                     	;# 
   169  0090                     	;# 
   170  0091                     	;# 
   171  0092                     	;# 
   172  0093                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0094                     	;# 
   176  0095                     	;# 
   177  0096                     	;# 
   178  0097                     	;# 
   179  0098                     	;# 
   180  0099                     	;# 
   181  009A                     	;# 
   182  009B                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  0105                     	;# 
   188  0107                     	;# 
   189  0108                     	;# 
   190  0109                     	;# 
   191  010C                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  0185                     	;# 
   197  0187                     	;# 
   198  0188                     	;# 
   199  0189                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202  0008                     _PORTD	set	8
   203  0046                     _RD6	set	70
   204  0044                     _RD4	set	68
   205  0043                     _RD3	set	67
   206  0042                     _RD2	set	66
   207  0045                     _RD5	set	69
   208  0041                     _RD1	set	65
   209  0047                     _RD7	set	71
   210  0040                     _RD0	set	64
   211  0088                     _TRISD	set	136
   212  0189                     _ANSELH	set	393
   213  0188                     _ANSEL	set	392
   214                           
   215                           	psect	cinit
   216  07FC                     start_initialization:	
   217                           ; #config settings
   218                           
   219  07FC                     __initialization:
   220  07FC                     end_of_initialization:	
   221                           ;End of C runtime variable initialization code
   222                           
   223  07FC                     __end_of__initialization:
   224  07FC  0183               	clrf	3
   225  07FD  120A  118A  2E4F   	ljmp	_main	;jump to C main() function
   226                           
   227                           	psect	cstackCOMMON
   228  0070                     __pcstackCOMMON:
   229  0070                     ?_main:
   230  0070                     ?___wmul:	
   231                           ; 1 bytes @ 0x0
   232                           
   233  0070                     ___wmul@multiplier:	
   234                           ; 2 bytes @ 0x0
   235                           
   236                           
   237                           ; 2 bytes @ 0x0
   238  0070                     	ds	2
   239  0072                     ___wmul@multiplicand:
   240                           
   241                           ; 2 bytes @ 0x2
   242  0072                     	ds	2
   243  0074                     ??___wmul:
   244  0074                     ___wmul@product:	
   245                           ; 1 bytes @ 0x4
   246                           
   247                           
   248                           ; 2 bytes @ 0x4
   249  0074                     	ds	2
   250  0076                     ??_main:
   251                           
   252                           ; 1 bytes @ 0x6
   253  0076                     	ds	2
   254                           
   255                           	psect	cstackBANK0
   256  0020                     __pcstackBANK0:
   257  0020                     main@l1:
   258                           
   259                           ; 2 bytes @ 0x0
   260  0020                     	ds	2
   261  0022                     main@l2:
   262                           
   263                           ; 2 bytes @ 0x2
   264  0022                     	ds	2
   265  0024                     main@l3:
   266                           
   267                           ; 2 bytes @ 0x4
   268  0024                     	ds	2
   269  0026                     main@l4:
   270                           
   271                           ; 2 bytes @ 0x6
   272  0026                     	ds	2
   273  0028                     main@l5:
   274                           
   275                           ; 2 bytes @ 0x8
   276  0028                     	ds	2
   277  002A                     main@l6:
   278                           
   279                           ; 2 bytes @ 0xA
   280  002A                     	ds	2
   281  002C                     main@s1:
   282                           
   283                           ; 2 bytes @ 0xC
   284  002C                     	ds	2
   285  002E                     main@s2:
   286                           
   287                           ; 2 bytes @ 0xE
   288  002E                     	ds	2
   289  0030                     main@s3:
   290                           
   291                           ; 2 bytes @ 0x10
   292  0030                     	ds	2
   293  0032                     main@s4:
   294                           
   295                           ; 2 bytes @ 0x12
   296  0032                     	ds	2
   297  0034                     main@s5:
   298                           
   299                           ; 2 bytes @ 0x14
   300  0034                     	ds	2
   301  0036                     main@s6:
   302                           
   303                           ; 2 bytes @ 0x16
   304  0036                     	ds	2
   305  0038                     main@temp:
   306                           
   307                           ; 2 bytes @ 0x18
   308  0038                     	ds	2
   309                           
   310                           	psect	maintext
   311  064F                     __pmaintext:	
   312 ;;
   313 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   314 ;;
   315 ;; *************** function _main *****************
   316 ;; Defined at:
   317 ;;		line 18 in file "newmain.c"
   318 ;; Parameters:    Size  Location     Type
   319 ;;		None
   320 ;; Auto vars:     Size  Location     Type
   321 ;;  temp            2   24[BANK0 ] unsigned int 
   322 ;;  s6              2   22[BANK0 ] unsigned int 
   323 ;;  s5              2   20[BANK0 ] unsigned int 
   324 ;;  s4              2   18[BANK0 ] unsigned int 
   325 ;;  s3              2   16[BANK0 ] unsigned int 
   326 ;;  s2              2   14[BANK0 ] unsigned int 
   327 ;;  s1              2   12[BANK0 ] unsigned int 
   328 ;;  l6              2   10[BANK0 ] unsigned int 
   329 ;;  l5              2    8[BANK0 ] unsigned int 
   330 ;;  l4              2    6[BANK0 ] unsigned int 
   331 ;;  l3              2    4[BANK0 ] unsigned int 
   332 ;;  l2              2    2[BANK0 ] unsigned int 
   333 ;;  l1              2    0[BANK0 ] unsigned int 
   334 ;;  l8              2    0        unsigned int 
   335 ;;  l7              2    0        unsigned int 
   336 ;;  s8              2    0        unsigned int 
   337 ;;  s7              2    0        unsigned int 
   338 ;; Return value:  Size  Location     Type
   339 ;;                  1    wreg      void 
   340 ;; Registers used:
   341 ;;		wreg, status,2, status,0, pclath, cstack
   342 ;; Tracked objects:
   343 ;;		On entry : B00/0
   344 ;;		On exit  : 0/0
   345 ;;		Unchanged: 0/0
   346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   347 ;;      Params:         0       0       0       0       0
   348 ;;      Locals:         0      26       0       0       0
   349 ;;      Temps:          2       0       0       0       0
   350 ;;      Totals:         2      26       0       0       0
   351 ;;Total ram usage:       28 bytes
   352 ;; Hardware stack levels required when called: 1
   353 ;; This function calls:
   354 ;;		___wmul
   355 ;; This function is called by:
   356 ;;		Startup code after reset
   357 ;; This function uses a non-reentrant model
   358 ;;
   359                           
   360                           
   361                           ;psect for function _main
   362  064F                     _main:
   363  064F                     l757:	
   364                           ;incstack = 0
   365                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   366                           
   367                           
   368                           ;newmain.c: 19:     ANSEL = ANSELH = 0;
   369  064F  1683               	bsf	3,5	;RP0=1, select bank3
   370  0650  1703               	bsf	3,6	;RP1=1, select bank3
   371  0651  0189               	clrf	9	;volatile
   372  0652  0188               	clrf	8	;volatile
   373                           
   374                           ;newmain.c: 20:     TRISD = 0;
   375  0653  1683               	bsf	3,5	;RP0=1, select bank1
   376  0654  1303               	bcf	3,6	;RP1=0, select bank1
   377  0655  0188               	clrf	8	;volatile
   378  0656                     l759:
   379                           
   380                           ;newmain.c: 21:     PORTD = 0xff;
   381  0656  30FF               	movlw	255
   382  0657  1283               	bcf	3,5	;RP0=0, select bank0
   383  0658  1303               	bcf	3,6	;RP1=0, select bank0
   384  0659  0088               	movwf	8	;volatile
   385  065A                     l761:
   386                           
   387                           ;newmain.c: 22:     unsigned int s1 = 0, s2 = 0, s3 = 0, s4 = 0, s5 = 0, s6 = 0, s7 = 0,
      +                           s8 = 0;
   388  065A  01AC               	clrf	main@s1
   389  065B  01AD               	clrf	main@s1+1
   390  065C                     l763:
   391  065C  01AE               	clrf	main@s2
   392  065D  01AF               	clrf	main@s2+1
   393  065E                     l765:
   394  065E  01B0               	clrf	main@s3
   395  065F  01B1               	clrf	main@s3+1
   396  0660                     l767:
   397  0660  01B2               	clrf	main@s4
   398  0661  01B3               	clrf	main@s4+1
   399  0662                     l769:
   400  0662  01B4               	clrf	main@s5
   401  0663  01B5               	clrf	main@s5+1
   402  0664                     l771:
   403  0664  01B6               	clrf	main@s6
   404  0665  01B7               	clrf	main@s6+1
   405  0666                     l773:
   406  0666                     l775:
   407  0666                     l777:
   408                           
   409                           ;newmain.c: 23:     unsigned int l1 = 1, l2 = 1, l3 = 1, l4 = 1, l5 = 1, l6 = 1, l7 = 1,
      +                           l8 = 1;
   410  0666  3001               	movlw	1
   411  0667  00A0               	movwf	main@l1
   412  0668  3000               	movlw	0
   413  0669  00A1               	movwf	main@l1+1
   414  066A                     l779:
   415  066A  3001               	movlw	1
   416  066B  00A2               	movwf	main@l2
   417  066C  3000               	movlw	0
   418  066D  00A3               	movwf	main@l2+1
   419  066E                     l781:
   420  066E  3001               	movlw	1
   421  066F  00A4               	movwf	main@l3
   422  0670  3000               	movlw	0
   423  0671  00A5               	movwf	main@l3+1
   424  0672                     l783:
   425  0672  3001               	movlw	1
   426  0673  00A6               	movwf	main@l4
   427  0674  3000               	movlw	0
   428  0675  00A7               	movwf	main@l4+1
   429  0676                     l785:
   430  0676  3001               	movlw	1
   431  0677  00A8               	movwf	main@l5
   432  0678  3000               	movlw	0
   433  0679  00A9               	movwf	main@l5+1
   434  067A                     l787:
   435  067A  3001               	movlw	1
   436  067B  00AA               	movwf	main@l6
   437  067C  3000               	movlw	0
   438  067D  00AB               	movwf	main@l6+1
   439  067E                     l789:
   440  067E                     l791:
   441  067E                     l793:
   442                           
   443                           ;newmain.c: 24:     unsigned int temp = 0;
   444  067E  01B8               	clrf	main@temp
   445  067F  01B9               	clrf	main@temp+1
   446                           
   447                           ;newmain.c: 25:     while(temp <= 10000) {
   448  0680  2FEE               	goto	l847
   449  0681                     l795:
   450                           
   451                           ;newmain.c: 26:         if(temp == (5000*l1)) {
   452  0681  0821               	movf	main@l1+1,w
   453  0682  00F1               	movwf	___wmul@multiplier+1
   454  0683  0820               	movf	main@l1,w
   455  0684  00F0               	movwf	___wmul@multiplier
   456  0685  3088               	movlw	136
   457  0686  00F2               	movwf	___wmul@multiplicand
   458  0687  3013               	movlw	19
   459  0688  00F3               	movwf	___wmul@multiplicand+1
   460  0689  120A  118A  262A  120A  118A  	fcall	___wmul
   461  068E  1283               	bcf	3,5	;RP0=0, select bank0
   462  068F  1303               	bcf	3,6	;RP1=0, select bank0
   463  0690  0839               	movf	main@temp+1,w
   464  0691  0671               	xorwf	?___wmul+1,w
   465  0692  1D03               	skipz
   466  0693  2E96               	goto	u425
   467  0694  0838               	movf	main@temp,w
   468  0695  0670               	xorwf	?___wmul,w
   469  0696                     u425:
   470  0696  1D03               	skipz
   471  0697  2E99               	goto	u421
   472  0698  2E9A               	goto	u420
   473  0699                     u421:
   474  0699  2EC2               	goto	l803
   475  069A                     u420:
   476  069A                     l797:
   477                           
   478                           ;newmain.c: 27:             RD0 = RD7 = s1;
   479  069A  182C               	btfsc	main@s1,0
   480  069B  2E9D               	goto	u431
   481  069C  2EA1               	goto	u430
   482  069D                     u431:
   483  069D  1283               	bcf	3,5	;RP0=0, select bank0
   484  069E  1303               	bcf	3,6	;RP1=0, select bank0
   485  069F  1788               	bsf	8,7	;volatile
   486  06A0  2EA4               	goto	u444
   487  06A1                     u430:
   488  06A1  1283               	bcf	3,5	;RP0=0, select bank0
   489  06A2  1303               	bcf	3,6	;RP1=0, select bank0
   490  06A3  1388               	bcf	8,7	;volatile
   491  06A4                     u444:
   492  06A4  1B88               	btfsc	8,7	;volatile
   493  06A5  2EA7               	goto	u441
   494  06A6  2EAB               	goto	u440
   495  06A7                     u441:
   496  06A7  1283               	bcf	3,5	;RP0=0, select bank0
   497  06A8  1303               	bcf	3,6	;RP1=0, select bank0
   498  06A9  1408               	bsf	8,0	;volatile
   499  06AA  2EAE               	goto	u454
   500  06AB                     u440:
   501  06AB  1283               	bcf	3,5	;RP0=0, select bank0
   502  06AC  1303               	bcf	3,6	;RP1=0, select bank0
   503  06AD  1008               	bcf	8,0	;volatile
   504  06AE                     u454:
   505  06AE                     l799:
   506                           
   507                           ;newmain.c: 28:             l1 += 1;
   508  06AE  3001               	movlw	1
   509  06AF  07A0               	addwf	main@l1,f
   510  06B0  1803               	skipnc
   511  06B1  0AA1               	incf	main@l1+1,f
   512  06B2  3000               	movlw	0
   513  06B3  07A1               	addwf	main@l1+1,f
   514  06B4                     l801:
   515                           
   516                           ;newmain.c: 29:             s1 = !s1;
   517  06B4  082C               	movf	main@s1,w
   518  06B5  042D               	iorwf	main@s1+1,w
   519  06B6  1903               	btfsc	3,2
   520  06B7  2EB9               	goto	u461
   521  06B8  2EBB               	goto	u460
   522  06B9                     u461:
   523  06B9  3001               	movlw	1
   524  06BA  2EBC               	goto	u470
   525  06BB                     u460:
   526  06BB  3000               	movlw	0
   527  06BC                     u470:
   528  06BC  00F6               	movwf	??_main
   529  06BD  01F7               	clrf	??_main+1
   530  06BE  0876               	movf	??_main,w
   531  06BF  00AC               	movwf	main@s1
   532  06C0  0877               	movf	??_main+1,w
   533  06C1  00AD               	movwf	main@s1+1
   534  06C2                     l803:
   535                           
   536                           ;newmain.c: 31:         if(temp == (556*l2)) {
   537  06C2  0823               	movf	main@l2+1,w
   538  06C3  00F1               	movwf	___wmul@multiplier+1
   539  06C4  0822               	movf	main@l2,w
   540  06C5  00F0               	movwf	___wmul@multiplier
   541  06C6  302C               	movlw	44
   542  06C7  00F2               	movwf	___wmul@multiplicand
   543  06C8  3002               	movlw	2
   544  06C9  00F3               	movwf	___wmul@multiplicand+1
   545  06CA  120A  118A  262A  120A  118A  	fcall	___wmul
   546  06CF  1283               	bcf	3,5	;RP0=0, select bank0
   547  06D0  1303               	bcf	3,6	;RP1=0, select bank0
   548  06D1  0839               	movf	main@temp+1,w
   549  06D2  0671               	xorwf	?___wmul+1,w
   550  06D3  1D03               	skipz
   551  06D4  2ED7               	goto	u485
   552  06D5  0838               	movf	main@temp,w
   553  06D6  0670               	xorwf	?___wmul,w
   554  06D7                     u485:
   555  06D7  1D03               	skipz
   556  06D8  2EDA               	goto	u481
   557  06D9  2EDB               	goto	u480
   558  06DA                     u481:
   559  06DA  2F03               	goto	l811
   560  06DB                     u480:
   561  06DB                     l805:
   562                           
   563                           ;newmain.c: 32:             RD1 = RD5 = s2;
   564  06DB  182E               	btfsc	main@s2,0
   565  06DC  2EDE               	goto	u491
   566  06DD  2EE2               	goto	u490
   567  06DE                     u491:
   568  06DE  1283               	bcf	3,5	;RP0=0, select bank0
   569  06DF  1303               	bcf	3,6	;RP1=0, select bank0
   570  06E0  1688               	bsf	8,5	;volatile
   571  06E1  2EE5               	goto	u504
   572  06E2                     u490:
   573  06E2  1283               	bcf	3,5	;RP0=0, select bank0
   574  06E3  1303               	bcf	3,6	;RP1=0, select bank0
   575  06E4  1288               	bcf	8,5	;volatile
   576  06E5                     u504:
   577  06E5  1A88               	btfsc	8,5	;volatile
   578  06E6  2EE8               	goto	u501
   579  06E7  2EEC               	goto	u500
   580  06E8                     u501:
   581  06E8  1283               	bcf	3,5	;RP0=0, select bank0
   582  06E9  1303               	bcf	3,6	;RP1=0, select bank0
   583  06EA  1488               	bsf	8,1	;volatile
   584  06EB  2EEF               	goto	u514
   585  06EC                     u500:
   586  06EC  1283               	bcf	3,5	;RP0=0, select bank0
   587  06ED  1303               	bcf	3,6	;RP1=0, select bank0
   588  06EE  1088               	bcf	8,1	;volatile
   589  06EF                     u514:
   590  06EF                     l807:
   591                           
   592                           ;newmain.c: 33:             l2 += 1;
   593  06EF  3001               	movlw	1
   594  06F0  07A2               	addwf	main@l2,f
   595  06F1  1803               	skipnc
   596  06F2  0AA3               	incf	main@l2+1,f
   597  06F3  3000               	movlw	0
   598  06F4  07A3               	addwf	main@l2+1,f
   599  06F5                     l809:
   600                           
   601                           ;newmain.c: 34:             s2 = !s2;
   602  06F5  082E               	movf	main@s2,w
   603  06F6  042F               	iorwf	main@s2+1,w
   604  06F7  1903               	btfsc	3,2
   605  06F8  2EFA               	goto	u521
   606  06F9  2EFC               	goto	u520
   607  06FA                     u521:
   608  06FA  3001               	movlw	1
   609  06FB  2EFD               	goto	u530
   610  06FC                     u520:
   611  06FC  3000               	movlw	0
   612  06FD                     u530:
   613  06FD  00F6               	movwf	??_main
   614  06FE  01F7               	clrf	??_main+1
   615  06FF  0876               	movf	??_main,w
   616  0700  00AE               	movwf	main@s2
   617  0701  0877               	movf	??_main+1,w
   618  0702  00AF               	movwf	main@s2+1
   619  0703                     l811:
   620                           
   621                           ;newmain.c: 36:         if(temp == (1250*l3)) {
   622  0703  0825               	movf	main@l3+1,w
   623  0704  00F1               	movwf	___wmul@multiplier+1
   624  0705  0824               	movf	main@l3,w
   625  0706  00F0               	movwf	___wmul@multiplier
   626  0707  30E2               	movlw	226
   627  0708  00F2               	movwf	___wmul@multiplicand
   628  0709  3004               	movlw	4
   629  070A  00F3               	movwf	___wmul@multiplicand+1
   630  070B  120A  118A  262A  120A  118A  	fcall	___wmul
   631  0710  1283               	bcf	3,5	;RP0=0, select bank0
   632  0711  1303               	bcf	3,6	;RP1=0, select bank0
   633  0712  0839               	movf	main@temp+1,w
   634  0713  0671               	xorwf	?___wmul+1,w
   635  0714  1D03               	skipz
   636  0715  2F18               	goto	u545
   637  0716  0838               	movf	main@temp,w
   638  0717  0670               	xorwf	?___wmul,w
   639  0718                     u545:
   640  0718  1D03               	skipz
   641  0719  2F1B               	goto	u541
   642  071A  2F1C               	goto	u540
   643  071B                     u541:
   644  071B  2F3A               	goto	l819
   645  071C                     u540:
   646  071C                     l813:
   647                           
   648                           ;newmain.c: 37:             RD2 = s3;
   649  071C  1830               	btfsc	main@s3,0
   650  071D  2F1F               	goto	u551
   651  071E  2F23               	goto	u550
   652  071F                     u551:
   653  071F  1283               	bcf	3,5	;RP0=0, select bank0
   654  0720  1303               	bcf	3,6	;RP1=0, select bank0
   655  0721  1508               	bsf	8,2	;volatile
   656  0722  2F26               	goto	u564
   657  0723                     u550:
   658  0723  1283               	bcf	3,5	;RP0=0, select bank0
   659  0724  1303               	bcf	3,6	;RP1=0, select bank0
   660  0725  1108               	bcf	8,2	;volatile
   661  0726                     u564:
   662  0726                     l815:
   663                           
   664                           ;newmain.c: 38:             l3 += 1;
   665  0726  3001               	movlw	1
   666  0727  07A4               	addwf	main@l3,f
   667  0728  1803               	skipnc
   668  0729  0AA5               	incf	main@l3+1,f
   669  072A  3000               	movlw	0
   670  072B  07A5               	addwf	main@l3+1,f
   671  072C                     l817:
   672                           
   673                           ;newmain.c: 39:             s3 = !s3;
   674  072C  0830               	movf	main@s3,w
   675  072D  0431               	iorwf	main@s3+1,w
   676  072E  1903               	btfsc	3,2
   677  072F  2F31               	goto	u571
   678  0730  2F33               	goto	u570
   679  0731                     u571:
   680  0731  3001               	movlw	1
   681  0732  2F34               	goto	u580
   682  0733                     u570:
   683  0733  3000               	movlw	0
   684  0734                     u580:
   685  0734  00F6               	movwf	??_main
   686  0735  01F7               	clrf	??_main+1
   687  0736  0876               	movf	??_main,w
   688  0737  00B0               	movwf	main@s3
   689  0738  0877               	movf	??_main+1,w
   690  0739  00B1               	movwf	main@s3+1
   691  073A                     l819:
   692                           
   693                           ;newmain.c: 41:         if(temp == (1667*l4)) {
   694  073A  0827               	movf	main@l4+1,w
   695  073B  00F1               	movwf	___wmul@multiplier+1
   696  073C  0826               	movf	main@l4,w
   697  073D  00F0               	movwf	___wmul@multiplier
   698  073E  3083               	movlw	131
   699  073F  00F2               	movwf	___wmul@multiplicand
   700  0740  3006               	movlw	6
   701  0741  00F3               	movwf	___wmul@multiplicand+1
   702  0742  120A  118A  262A  120A  118A  	fcall	___wmul
   703  0747  1283               	bcf	3,5	;RP0=0, select bank0
   704  0748  1303               	bcf	3,6	;RP1=0, select bank0
   705  0749  0839               	movf	main@temp+1,w
   706  074A  0671               	xorwf	?___wmul+1,w
   707  074B  1D03               	skipz
   708  074C  2F4F               	goto	u595
   709  074D  0838               	movf	main@temp,w
   710  074E  0670               	xorwf	?___wmul,w
   711  074F                     u595:
   712  074F  1D03               	skipz
   713  0750  2F52               	goto	u591
   714  0751  2F53               	goto	u590
   715  0752                     u591:
   716  0752  2F71               	goto	l827
   717  0753                     u590:
   718  0753                     l821:
   719                           
   720                           ;newmain.c: 42:             RD3 = s4;
   721  0753  1832               	btfsc	main@s4,0
   722  0754  2F56               	goto	u601
   723  0755  2F5A               	goto	u600
   724  0756                     u601:
   725  0756  1283               	bcf	3,5	;RP0=0, select bank0
   726  0757  1303               	bcf	3,6	;RP1=0, select bank0
   727  0758  1588               	bsf	8,3	;volatile
   728  0759  2F5D               	goto	u614
   729  075A                     u600:
   730  075A  1283               	bcf	3,5	;RP0=0, select bank0
   731  075B  1303               	bcf	3,6	;RP1=0, select bank0
   732  075C  1188               	bcf	8,3	;volatile
   733  075D                     u614:
   734  075D                     l823:
   735                           
   736                           ;newmain.c: 43:             l4 += 1;
   737  075D  3001               	movlw	1
   738  075E  07A6               	addwf	main@l4,f
   739  075F  1803               	skipnc
   740  0760  0AA7               	incf	main@l4+1,f
   741  0761  3000               	movlw	0
   742  0762  07A7               	addwf	main@l4+1,f
   743  0763                     l825:
   744                           
   745                           ;newmain.c: 44:             s4 = !s4;
   746  0763  0832               	movf	main@s4,w
   747  0764  0433               	iorwf	main@s4+1,w
   748  0765  1903               	btfsc	3,2
   749  0766  2F68               	goto	u621
   750  0767  2F6A               	goto	u620
   751  0768                     u621:
   752  0768  3001               	movlw	1
   753  0769  2F6B               	goto	u630
   754  076A                     u620:
   755  076A  3000               	movlw	0
   756  076B                     u630:
   757  076B  00F6               	movwf	??_main
   758  076C  01F7               	clrf	??_main+1
   759  076D  0876               	movf	??_main,w
   760  076E  00B2               	movwf	main@s4
   761  076F  0877               	movf	??_main+1,w
   762  0770  00B3               	movwf	main@s4+1
   763  0771                     l827:
   764                           
   765                           ;newmain.c: 46:         if(temp == (1000*l5)) {
   766  0771  0829               	movf	main@l5+1,w
   767  0772  00F1               	movwf	___wmul@multiplier+1
   768  0773  0828               	movf	main@l5,w
   769  0774  00F0               	movwf	___wmul@multiplier
   770  0775  30E8               	movlw	232
   771  0776  00F2               	movwf	___wmul@multiplicand
   772  0777  3003               	movlw	3
   773  0778  00F3               	movwf	___wmul@multiplicand+1
   774  0779  120A  118A  262A  120A  118A  	fcall	___wmul
   775  077E  1283               	bcf	3,5	;RP0=0, select bank0
   776  077F  1303               	bcf	3,6	;RP1=0, select bank0
   777  0780  0839               	movf	main@temp+1,w
   778  0781  0671               	xorwf	?___wmul+1,w
   779  0782  1D03               	skipz
   780  0783  2F86               	goto	u645
   781  0784  0838               	movf	main@temp,w
   782  0785  0670               	xorwf	?___wmul,w
   783  0786                     u645:
   784  0786  1D03               	skipz
   785  0787  2F89               	goto	u641
   786  0788  2F8A               	goto	u640
   787  0789                     u641:
   788  0789  2FA8               	goto	l835
   789  078A                     u640:
   790  078A                     l829:
   791                           
   792                           ;newmain.c: 47:             RD4 = s5;
   793  078A  1834               	btfsc	main@s5,0
   794  078B  2F8D               	goto	u651
   795  078C  2F91               	goto	u650
   796  078D                     u651:
   797  078D  1283               	bcf	3,5	;RP0=0, select bank0
   798  078E  1303               	bcf	3,6	;RP1=0, select bank0
   799  078F  1608               	bsf	8,4	;volatile
   800  0790  2F94               	goto	u664
   801  0791                     u650:
   802  0791  1283               	bcf	3,5	;RP0=0, select bank0
   803  0792  1303               	bcf	3,6	;RP1=0, select bank0
   804  0793  1208               	bcf	8,4	;volatile
   805  0794                     u664:
   806  0794                     l831:
   807                           
   808                           ;newmain.c: 48:             l5 += 1;
   809  0794  3001               	movlw	1
   810  0795  07A8               	addwf	main@l5,f
   811  0796  1803               	skipnc
   812  0797  0AA9               	incf	main@l5+1,f
   813  0798  3000               	movlw	0
   814  0799  07A9               	addwf	main@l5+1,f
   815  079A                     l833:
   816                           
   817                           ;newmain.c: 49:             s5 = !s5;
   818  079A  0834               	movf	main@s5,w
   819  079B  0435               	iorwf	main@s5+1,w
   820  079C  1903               	btfsc	3,2
   821  079D  2F9F               	goto	u671
   822  079E  2FA1               	goto	u670
   823  079F                     u671:
   824  079F  3001               	movlw	1
   825  07A0  2FA2               	goto	u680
   826  07A1                     u670:
   827  07A1  3000               	movlw	0
   828  07A2                     u680:
   829  07A2  00F6               	movwf	??_main
   830  07A3  01F7               	clrf	??_main+1
   831  07A4  0876               	movf	??_main,w
   832  07A5  00B4               	movwf	main@s5
   833  07A6  0877               	movf	??_main+1,w
   834  07A7  00B5               	movwf	main@s5+1
   835  07A8                     l835:
   836                           
   837                           ;newmain.c: 51:         if(temp == (2500*l6)) {
   838  07A8  082B               	movf	main@l6+1,w
   839  07A9  00F1               	movwf	___wmul@multiplier+1
   840  07AA  082A               	movf	main@l6,w
   841  07AB  00F0               	movwf	___wmul@multiplier
   842  07AC  30C4               	movlw	196
   843  07AD  00F2               	movwf	___wmul@multiplicand
   844  07AE  3009               	movlw	9
   845  07AF  00F3               	movwf	___wmul@multiplicand+1
   846  07B0  120A  118A  262A  120A  118A  	fcall	___wmul
   847  07B5  1283               	bcf	3,5	;RP0=0, select bank0
   848  07B6  1303               	bcf	3,6	;RP1=0, select bank0
   849  07B7  0839               	movf	main@temp+1,w
   850  07B8  0671               	xorwf	?___wmul+1,w
   851  07B9  1D03               	skipz
   852  07BA  2FBD               	goto	u695
   853  07BB  0838               	movf	main@temp,w
   854  07BC  0670               	xorwf	?___wmul,w
   855  07BD                     u695:
   856  07BD  1D03               	skipz
   857  07BE  2FC0               	goto	u691
   858  07BF  2FC1               	goto	u690
   859  07C0                     u691:
   860  07C0  2FDF               	goto	l843
   861  07C1                     u690:
   862  07C1                     l837:
   863                           
   864                           ;newmain.c: 52:             RD6 = s6;
   865  07C1  1836               	btfsc	main@s6,0
   866  07C2  2FC4               	goto	u701
   867  07C3  2FC8               	goto	u700
   868  07C4                     u701:
   869  07C4  1283               	bcf	3,5	;RP0=0, select bank0
   870  07C5  1303               	bcf	3,6	;RP1=0, select bank0
   871  07C6  1708               	bsf	8,6	;volatile
   872  07C7  2FCB               	goto	u714
   873  07C8                     u700:
   874  07C8  1283               	bcf	3,5	;RP0=0, select bank0
   875  07C9  1303               	bcf	3,6	;RP1=0, select bank0
   876  07CA  1308               	bcf	8,6	;volatile
   877  07CB                     u714:
   878  07CB                     l839:
   879                           
   880                           ;newmain.c: 53:             l6 += 1;
   881  07CB  3001               	movlw	1
   882  07CC  07AA               	addwf	main@l6,f
   883  07CD  1803               	skipnc
   884  07CE  0AAB               	incf	main@l6+1,f
   885  07CF  3000               	movlw	0
   886  07D0  07AB               	addwf	main@l6+1,f
   887  07D1                     l841:
   888                           
   889                           ;newmain.c: 54:             s6 = !s6;
   890  07D1  0836               	movf	main@s6,w
   891  07D2  0437               	iorwf	main@s6+1,w
   892  07D3  1903               	btfsc	3,2
   893  07D4  2FD6               	goto	u721
   894  07D5  2FD8               	goto	u720
   895  07D6                     u721:
   896  07D6  3001               	movlw	1
   897  07D7  2FD9               	goto	u730
   898  07D8                     u720:
   899  07D8  3000               	movlw	0
   900  07D9                     u730:
   901  07D9  00F6               	movwf	??_main
   902  07DA  01F7               	clrf	??_main+1
   903  07DB  0876               	movf	??_main,w
   904  07DC  00B6               	movwf	main@s6
   905  07DD  0877               	movf	??_main+1,w
   906  07DE  00B7               	movwf	main@s6+1
   907  07DF                     l843:
   908                           
   909                           ;newmain.c: 56:         _delay((unsigned long)((1)*(4000000/4000.0)));
   910  07DF  30C7               	movlw	199
   911  07E0  00F6               	movwf	??_main
   912  07E1                     u757:
   913  07E1  2FE2               	nop2
   914  07E2  0BF6               	decfsz	??_main,f
   915  07E3  2FE1               	goto	u757
   916  07E4  2FE5               	nop2
   917  07E5  2FE6               	nop2
   918  07E6                     l845:
   919                           
   920                           ;newmain.c: 57:         temp += 1;
   921  07E6  3001               	movlw	1
   922  07E7  1283               	bcf	3,5	;RP0=0, select bank0
   923  07E8  1303               	bcf	3,6	;RP1=0, select bank0
   924  07E9  07B8               	addwf	main@temp,f
   925  07EA  1803               	skipnc
   926  07EB  0AB9               	incf	main@temp+1,f
   927  07EC  3000               	movlw	0
   928  07ED  07B9               	addwf	main@temp+1,f
   929  07EE                     l847:
   930                           
   931                           ;newmain.c: 25:     while(temp <= 10000) {
   932  07EE  3027               	movlw	39
   933  07EF  0239               	subwf	main@temp+1,w
   934  07F0  3011               	movlw	17
   935  07F1  1903               	skipnz
   936  07F2  0238               	subwf	main@temp,w
   937  07F3  1C03               	skipc
   938  07F4  2FF6               	goto	u741
   939  07F5  2FF7               	goto	u740
   940  07F6                     u741:
   941  07F6  2E81               	goto	l795
   942  07F7                     u740:
   943  07F7                     l849:
   944                           
   945                           ;newmain.c: 59:     PORTD = 0;
   946  07F7  0188               	clrf	8	;volatile
   947  07F8                     l40:	
   948                           ;newmain.c: 60:     while(1);
   949                           
   950  07F8                     l41:
   951  07F8  2FF8               	goto	l40
   952  07F9  120A  118A  2800   	ljmp	start
   953  07FC                     __end_of_main:
   954                           
   955                           	psect	text1
   956  062A                     __ptext1:	
   957 ;; *************** function ___wmul *****************
   958 ;; Defined at:
   959 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;  multiplier      2    0[COMMON] unsigned int 
   962 ;;  multiplicand    2    2[COMMON] unsigned int 
   963 ;; Auto vars:     Size  Location     Type
   964 ;;  product         2    4[COMMON] unsigned int 
   965 ;; Return value:  Size  Location     Type
   966 ;;                  2    0[COMMON] unsigned int 
   967 ;; Registers used:
   968 ;;		wreg, status,2, status,0
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   974 ;;      Params:         4       0       0       0       0
   975 ;;      Locals:         2       0       0       0       0
   976 ;;      Temps:          0       0       0       0       0
   977 ;;      Totals:         6       0       0       0       0
   978 ;;Total ram usage:        6 bytes
   979 ;; Hardware stack levels used: 1
   980 ;; This function calls:
   981 ;;		Nothing
   982 ;; This function is called by:
   983 ;;		_main
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           
   988                           ;psect for function ___wmul
   989  062A                     ___wmul:
   990  062A                     l743:	
   991                           ;incstack = 0
   992                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   993                           
   994  062A  01F4               	clrf	___wmul@product
   995  062B  01F5               	clrf	___wmul@product+1
   996  062C                     l745:
   997  062C  1C70               	btfss	___wmul@multiplier,0
   998  062D  2E2F               	goto	u381
   999  062E  2E30               	goto	u380
  1000  062F                     u381:
  1001  062F  2E36               	goto	l129
  1002  0630                     u380:
  1003  0630                     l747:
  1004  0630  0872               	movf	___wmul@multiplicand,w
  1005  0631  07F4               	addwf	___wmul@product,f
  1006  0632  1803               	skipnc
  1007  0633  0AF5               	incf	___wmul@product+1,f
  1008  0634  0873               	movf	___wmul@multiplicand+1,w
  1009  0635  07F5               	addwf	___wmul@product+1,f
  1010  0636                     l129:
  1011  0636  3001               	movlw	1
  1012  0637                     u395:
  1013  0637  1003               	clrc
  1014  0638  0DF2               	rlf	___wmul@multiplicand,f
  1015  0639  0DF3               	rlf	___wmul@multiplicand+1,f
  1016  063A  3EFF               	addlw	-1
  1017  063B  1D03               	skipz
  1018  063C  2E37               	goto	u395
  1019  063D                     l749:
  1020  063D  3001               	movlw	1
  1021  063E                     u405:
  1022  063E  1003               	clrc
  1023  063F  0CF1               	rrf	___wmul@multiplier+1,f
  1024  0640  0CF0               	rrf	___wmul@multiplier,f
  1025  0641  3EFF               	addlw	-1
  1026  0642  1D03               	skipz
  1027  0643  2E3E               	goto	u405
  1028  0644                     l751:
  1029  0644  0870               	movf	___wmul@multiplier,w
  1030  0645  0471               	iorwf	___wmul@multiplier+1,w
  1031  0646  1D03               	btfss	3,2
  1032  0647  2E49               	goto	u411
  1033  0648  2E4A               	goto	u410
  1034  0649                     u411:
  1035  0649  2E2C               	goto	l745
  1036  064A                     u410:
  1037  064A                     l753:
  1038  064A  0875               	movf	___wmul@product+1,w
  1039  064B  00F1               	movwf	?___wmul+1
  1040  064C  0874               	movf	___wmul@product,w
  1041  064D  00F0               	movwf	?___wmul
  1042  064E                     l131:
  1043  064E  0008               	return
  1044  064F                     __end_of___wmul:
  1045  007E                     btemp	set	126	;btemp
  1046  007E                     wtemp0	set	126
  1047                           
  1048                           	psect	config
  1049                           
  1050                           ;Config register CONFIG1 @ 0x2007
  1051                           ;	Oscillator Selection bits
  1052                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1053                           ;	Watchdog Timer Enable bit
  1054                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1055                           ;	Power-up Timer Enable bit
  1056                           ;	PWRTE = OFF, PWRT disabled
  1057                           ;	RE3/MCLR pin function select bit
  1058                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1059                           ;	Code Protection bit
  1060                           ;	CP = OFF, Program memory code protection is disabled
  1061                           ;	Data Code Protection bit
  1062                           ;	CPD = OFF, Data memory code protection is disabled
  1063                           ;	Brown Out Reset Selection bits
  1064                           ;	BOREN = OFF, BOR disabled
  1065                           ;	Internal External Switchover bit
  1066                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1067                           ;	Fail-Safe Clock Monitor Enabled bit
  1068                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1069                           ;	Low Voltage Programming Enable bit
  1070                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1071                           ;	In-Circuit Debugger Mode bit
  1072                           ;	DEBUG = 0x1, unprogrammed default
  1073  2007                     	org	8199
  1074  2007  20F2               	dw	8434
  1075                           
  1076                           ;Config register CONFIG2 @ 0x2008
  1077                           ;	Brown-out Reset Selection bit
  1078                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1079                           ;	Flash Program Memory Self Write Enable bits
  1080                           ;	WRT = OFF, Write protection off
  1081  2008                     	org	8200
  1082  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80     26      26
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0    1584
                                              6 COMMON     2     2      0
                                              0 BANK0     26    26      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    1004
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      1A       5       32.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Aug 18 09:43:02 2021

                     l40 07F8                       l41 07F8      ___wmul@multiplicand 0072  
                    l131 064E                      l129 0636                      l801 06B4  
                    l811 0703                      l803 06C2                      l821 0753  
                    l813 071C                      l805 06DB                      l751 0644  
                    l743 062A                      l831 0794                      l823 075D  
                    l815 0726                      l807 06EF                      l753 064A  
                    l745 062C                      l841 07D1                      l833 079A  
                    l825 0763                      l817 072C                      l809 06F5  
                    l761 065A                      l747 0630                      l843 07DF  
                    l835 07A8                      l827 0771                      l819 073A  
                    l771 0664                      l763 065C                      l749 063D  
                    l845 07E6                      l837 07C1                      l829 078A  
                    l781 066E                      l773 0666                      l765 065E  
                    l757 064F                      l839 07CB                      l847 07EE  
                    l791 067E                      l783 0672                      l775 0666  
                    l767 0660                      l759 0656                      l849 07F7  
                    l793 067E                      l785 0676                      l777 0666  
                    l769 0662                      l795 0681                      l787 067A  
                    l779 066A                      l797 069A                      l789 067E  
                    l799 06AE                      _RD0 0040                      _RD1 0041  
                    _RD2 0042                      _RD3 0043                      _RD4 0044  
                    _RD5 0045                      _RD6 0046                      _RD7 0047  
                    u410 064A                      u411 0649                      u500 06EC  
                    u420 069A                      u405 063E                      u501 06E8  
                    u421 0699                      u430 06A1                      u431 069D  
                    u600 075A                      u520 06FC                      u504 06E5  
                    u440 06AB                      u601 0756                      u521 06FA  
                    u441 06A7                      u425 0696                      u530 06FD  
                    u514 06EF                      u380 0630                      u700 07C8  
                    u620 076A                      u540 071C                      u460 06BB  
                    u444 06A4                      u381 062F                      u701 07C4  
                    u621 0768                      u541 071B                      u461 06B9  
                    u630 076B                      u614 075D                      u550 0723  
                    u470 06BC                      u454 06AE                      u551 071F  
                    u720 07D8                      u640 078A                      u480 06DB  
                    u721 07D6                      u641 0789                      u545 0718  
                    u481 06DA                      u730 07D9                      u714 07CB  
                    u650 0791                      u570 0733                      u490 06E2  
                    u395 0637                      u651 078D                      u571 0731  
                    u491 06DE                      u740 07F7                      u580 0734  
                    u564 0726                      u741 07F6                      u645 0786  
                    u485 06D7                      u670 07A1                      u590 0753  
                    u671 079F                      u591 0752                      u680 07A2  
                    u664 0794                      u690 07C1                      u691 07C0  
                    u595 074F                      u757 07E1                      u695 07BD  
                   _main 064F                     btemp 007E                     start 0000  
                  ?_main 0070                    _ANSEL 0188                    _PORTD 0008  
                  _TRISD 0088                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0076  
                 _ANSELH 0189                   ___wmul 062A                   main@l1 0020  
                 main@l2 0022                   main@l3 0024                   main@l4 0026  
                 main@l5 0028                   main@l6 002A                   main@s1 002C  
                 main@s2 002E                   main@s3 0030                   main@s4 0032  
                 main@s5 0034                   main@s6 0036  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 064F                  ?___wmul 0070  
        __size_of___wmul 0025                  __ptext1 062A     end_of_initialization 07FC  
         __end_of___wmul 064F      start_initialization 07FC                 ??___wmul 0074  
              ___latbits 0002            __pcstackBANK0 0020           ___wmul@product 0074  
      ___wmul@multiplier 0070            __size_of_main 01AD                 main@temp 0038  
